2603
select name from customers where state = 'RS'
---
2603
SELECT Name,Street 
FROM Customers 
WHERE City = 'Porto Alegre'
---
2604
SELECT id, name 
FROM products 
WHERE price  <10
OR price >100
---
2605
SELECT products.name,providers.name 
FROM products,providers
WHERE id_categories=6 
AND products.id_providers=providers.id;
---
2606
SELECT id,name 
FROM products 
WHERE id_categories IN (SELECT id FROM Categories WHERE name LIKE 'super%')
---
2607
SELECT City 
FROM Providers 
ORDER BY City ASC
---
2608
SELECT max(Price) price, min(Price) price 
FROM products
---
2609
SELECT categories.name,sum(amount) "sum"
FROM products
INNER JOIN categories on products.id_categories=categories.id
GROUP BY categories.name;
---
2610
SELECT ROUND(avg(price),2) "price" 
FROM products;
---
2611
SELECT id,name 
FROM Movies 
WHERE id_genres = (SELECT id  FROM Genres
WHERE description = 'Action' )
---
2613
SELECT movies.id,movies.name
FROM movies
INNER JOIN prices ON movies.id_prices=prices.id
WHERE prices.value < 2.00
---
2614
SELECT customers.name "name",rentals.rentals_date "rentals_date"
FROM customers
INNER JOIN rentals ON customers.id = rentals.id_customers
WHERE rentals.rentals_date >= '2016-09-01' 
AND rentals.rentals_date <= '2016-09-30'
---
2615
SELECT distinct city 
FROM customers 
---
2616
SELECT id,name
FROM customers
WHERE id NOT IN (SELECT id_customers FROM locations)
---
2617
SELECT products.name, providers.name
FROM products
INNER JOIN providers ON products.id_providers = providers.id
WHERE providers.name = 'Ajax SA'
---
2618
SELECT products.name,providers.name,categories.name
FROM products
INNER JOIN providers ON products.id_providers = providers.id
INNER JOIN categories ON products.id_categories = categories.id
WHERE providers.name = 'Sansul SA' AND categories.name = 'Imported'
---
2619
SELECT products.name,providers.name,products.price
FROM products
INNER JOIN providers ON products.id_providers = providers.id
INNER JOIN categories ON products.id_categories = categories.id
WHERE price > 1000 AND categories.name = 'Super Luxury'
---
2620
SELECT customers.name,orders.id
FROM customers
INNER JOIN orders ON customers.id = orders.id_customers
WHERE orders.orders_date>='2016-01-01' 
AND orders.orders_date <= '2016-06-30'
---
2621
SELECT products.name
FROM providers
INNER JOIN products ON providers.id = products.id_providers
WHERE products.amount>= 10  AND products.amount <= 20  AND providers.name LIKE 'P%'
---
2622
SELECT name 
FROM customers 
WHERE id IN (SELECT id_customers FROM legal_person)
---
2623
SELECT products.name, categories.name
FROM products
INNER JOIN categories 
ON products.id_categories = categories.id
WHERE products.amount > 100 
AND products.id_categories IN (1,2,3,6,9)
---
2624
SELECT COUNT(Distinct City) 
FROM Customers
---
2625
SELECT CONCAT(substr(cpf,1,3),'.',SUBSTR(cpf,4,3),'.',
SUBSTR(cpf,7,3),'-',SUBSTR(cpf,10,2)) "CPF"
FROM natural_person;
---
2737
SELECT name, customers_number 
FROM Lawyers
WHERE customers_number = (SELECT MAX(customers_number) FROM Lawyers)
UNION ALL
SELECT name, customers_number 
FROM Lawyers
WHERE customers_number = (SELECT MIN(customers_number) FROM Lawyers)
UNION ALL
SELECT 'Average'as name,cast(avg(customers_number)as int)as customers_number FROM lawyers
---
2738
SELECT Candidate.name,ROUND(((Score.math*2) + (specific*3) + (project_plan*5))/10,2)  as avg
FROM Candidate
INNER JOIN Score
ON Candidate.id = Score.candidate_id
ORDER BY avg DESC








